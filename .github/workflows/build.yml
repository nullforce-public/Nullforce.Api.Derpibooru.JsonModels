name: build

# Run this workflow every time a new commit pushed to your repository
on:
  push:
    paths:
      - '.github/**'
      - 'GitVersion.yml'
      - 'src/**'
  pull_request:
    paths:
      - '.github/**'
      - 'GitVersion.yml'
      - 'src/**'

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  info:
    runs-on: ubuntu-latest
    steps:
    - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
    - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
    - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

  build:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      # Checks out a copy of your repository on the ubuntu-latest machine
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: dotnet restore
        run: dotnet restore

      - name: dotnet build
        run: dotnet build --configuration Release --no-restore

      - name: dotnet test
        run: dotnet test --configuration Release --no-restore --no-build

      # Create artifacts
      - name: dotnet pack
        run: dotnet pack --configuration Release --no-restore --no-build --output publish

      - name: Publish GitHub Artifact
        uses: actions/upload-artifact@v3
        with:
          name: nuget
          path: publish/*.nupkg

  publish-github-package:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Get artifact
      uses: actions/download-artifact@v3
      with:
        name: nuget
    - name: Publish NuGet Package to GitHub Package
      run: dotnet nuget push ./*.nupkg --api-key ${{ secrets.GITHUB_TOKEN }} --source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json

  publish-nuget-org:
    if: github.ref_name == 'main' || startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: [build, publish-github-package]
    steps:
    - name: Get artifact
      uses: actions/download-artifact@v3
      with:
        name: nuget
    - name: Publish NuGet Package to nuget.org
      env:
        NUGET_APIKEY: ${{ secrets.NUGET_KEY_NULLFORCE_API }}
      run: dotnet nuget push ./*.nupkg --api-key $NUGET_APIKEY --source https://api.nuget.org/v3/index.json
